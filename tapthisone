<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="A cute interactive love-themed webpage" />
    <meta name="theme-color" content="#ffb3d9" />
    <meta property="og:title" content="Can I Annoy You?" />
    <meta property="og:description" content="A cute interactive love message" />
    <title>Can I Annoy You? 💕</title>
    <link rel="icon" type="image/svg+xml" href="static/images/favicon.svg" />
    <link rel="stylesheet" href="static/css/style.css" />
  </head>
  <body>
    <main>
      <h1>can i annoy u almost every day?</h1>
      <div class="container">
        <button class="sure" onclick="showLove()" aria-label="Accept">
          sure
        </button>
        <button class="no" onmouseover="moveNo()" aria-label="Decline">
          no, enough
        </button>
      </div>
      <div id="loveContainer" class="hidden">❤️ 💖 💝 💕 💗</div>
      <div id="messageContainer" class="hidden">
        <p class="message">hehe i love u batam :p</p>
      </div>
    </main>
    <script src="static/js/script.js"></script>
  </body>
</html>

:root {
  --primary-pink: #ffb3d9;
  --button-red: #ff4d4d;
  --button-gray: #666;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
  text-align: center;
  background-color: var(--primary-pink);
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  position: relative;
}

main {
  width: 100%;
  padding: 20px;
}

h1 {
  margin-bottom: 50px;
  font-size: 2rem;
  color: #333;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
}

.container {
  margin: 30px auto;
  display: flex;
  gap: 20px;
  justify-content: center;
}

button {
  font-size: 1.2rem;
  padding: 12px 24px;
  border: none;
  cursor: pointer;
  border-radius: 25px;
  transition: all 0.3s ease;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

button:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
}

.sure {
  background-color: var(--button-red);
  color: white;
}

.no {
  background-color: var(--button-gray);
  color: white;
  position: absolute;
}

.hidden {
  display: none;
}

.love {
  font-size: 2rem;
  position: absolute;
  animation:
    loveAnim 5s forwards,
    moveAnim 5s infinite;
  opacity: 0;
  z-index: 1;
  filter: drop-shadow(0 0 10px rgba(255, 77, 77, 0.3));
}

@keyframes loveAnim {
  0% {
    opacity: 0;
    transform: scale(0) rotate(-45deg);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotate(0deg);
  }
}

@keyframes moveAnim {
  0% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(50px, -50px);
  }
  50% {
    transform: translate(100px, 0);
  }
  75% {
    transform: translate(50px, 50px);
  }
  100% {
    transform: translate(0, 0);
  }
}

.message {
  font-size: 1.5rem;
  margin-top: 30px;
  color: var(--button-red);
  font-weight: bold;
  opacity: 0;
  animation: fadeIn 1s forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@media (max-width: 768px) {
  h1 {
    font-size: 1.5rem;
    margin-bottom: 30px;
  }

  button {
    font-size: 1rem;
    padding: 10px 20px;
  }

  .message {
    font-size: 1.2rem;
  }
}

const hearts = ["❤️", "💖", "💝", "💕", "💗", "💓", "💞"]

function showLove() {
  const numHearts = 15

  for (let i = 0; i < numHearts; i++) {
    const love = document.createElement("div")
    love.classList.add("love")
    love.textContent = hearts[Math.floor(Math.random() * hearts.length)]
    document.body.appendChild(love)

    const maxWidth = window.innerWidth - 50
    const maxHeight = window.innerHeight - 50

    const x = Math.random() * maxWidth
    const y = Math.random() * maxHeight

    love.style.left = `${x}px`
    love.style.top = `${y}px`

    // Add slight random rotation
    const rotation = Math.random() * 360
    love.style.transform = `rotate(${rotation}deg)`

    setTimeout(() => {
      love.style.opacity = 1
      love.style.animation = "loveAnim 5s forwards, moveAnim 5s infinite"
    }, i * 150)

    // Remove hearts after animation to prevent memory leaks
    setTimeout(() => {
      love.remove()
    }, 10000)
  }

  const messageContainer = document.getElementById("messageContainer")
  messageContainer.classList.remove("hidden")
}

function moveNo() {
  const btnNo = document.querySelector(".no")
  const safeMargin = 20

  const maxWidth = window.innerWidth - btnNo.offsetWidth - safeMargin
  const maxHeight = window.innerHeight - btnNo.offsetHeight - safeMargin

  const x = Math.max(safeMargin, Math.random() * maxWidth)
  const y = Math.max(safeMargin, Math.random() * maxHeight)

  btnNo.style.left = `${x}px`
  btnNo.style.top = `${y}px`
}

// Ensure "no" button stays within viewport on window resize
window.addEventListener("resize", () => {
  const btnNo = document.querySelector(".no")
  if (btnNo) {
    moveNo()
  }
})
